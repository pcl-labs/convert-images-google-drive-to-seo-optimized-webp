---
description: 
globs: 
alwaysApply: true
---
---

# 🧭 Cursor Dev Ruleset – Blawby Gmail Agent

> This ruleset defines conventions and resource links for developing `agent.blawby.com`, including Gmail Add-On logic, Cloudflare Workers, and Cloudflare Vectorize.

---

## 📁 Project Structure Guidelines

```plaintext
/src
  /workers              # All Cloudflare Worker logic
    gmailAuth.ts
    labelClassifier.ts
    generateReply.ts
    billingLogger.ts
    whisperPreview.ts
    vectorIndexer.ts
  /lib
    openaiClient.ts     # Prompt orchestration + embeddings
    vectorClient.ts     # Cloudflare Vectorize SDK wrapper
    utils.ts
/voice-profiles
  user-[id].json        # Local testing / Voice profile exports
/scripts
  preprocessEmails.ts   # Local tools for email prep / chunking

/.github/workflows
  deploy.yml            # Wrangler + Vite + Add-On deploy pipeline
```

---

## ☁️ Cloudflare Worker Rules

- Use **TypeScript**
- Deploy via `wrangler`
- Use `fetch()` for OpenAI + Gmail APIs
- Store Gmail tokens and metadata in **Cloudflare KV**
- Avoid large payloads; offload to **Vectorize** or **R2** when necessary

### Docs:
- 🔧 [Cloudflare Workers Docs](https://developers.cloudflare.com/workers/)
- 🧰 [KV Storage Docs](https://developers.cloudflare.com/workers/runtime-apis/kv/)
- 🧩 [D1 (Cloudflare DB) Docs](https://developers.cloudflare.com/d1/)

---

## 🧠 Cloudflare Vectorize Rules

- Use **`text-embedding-ada-002`** (OpenAI) or Claude embedding models
- Vector metadata **must include**:
  - `thread_id`, `subject`, `client_name`, `timestamp`, `summary`, `user_id`
- Chunk emails to ~500 tokens max
- Use cosine similarity search to fetch similar past replies or cases
- Rebuild index after onboarding, and when enough new data is added

### Docs:
- 📌 [Cloudflare Vectorize Official Docs](https://developers.cloudflare.com/vectorize/)
- 📦 [Vector Metadata Format Guide](https://developers.cloudflare.com/vectorize/build/metadata/)
- 🔍 [Querying Embeddings](https://developers.cloudflare.com/vectorize/query/)

---

## ✍️ Prompt Engineering Rules

- Store prompt templates in `openaiClient.ts`
- Include:
  - User's **Voice Profile**
  - Message thread summary
  - Snippets from **Vectorize search**
- Prompt style: system + user messages (chat format)

### Docs:
- 🧠 [OpenAI API Docs](https://platform.openai.com/docs/)
- 📐 [Best Practices for Prompt Design](https://platform.openai.com/docs/guides/gpt)

---

## ✏️ Gmail Add-On (Sidebar) Rules

- Written in **Google Apps Script (JavaScript)**
- UI must include:
  - “Generate Reply” button
  - Display of Whisper-mode similar replies
  - Insert-to-draft button
  - Confirmed billing log toggle
- Do **not** auto-send any replies

### Docs:
- 📨 [Gmail Add-On Docs](https://developers.google.com/gmail/add-ons/)
- 🎨 [Card UI Widgets (Sidebar)](https://developers.google.com/gmail/add-ons/guides/card-actions)
- 🔐 [Gmail OAuth Scopes](https://developers.google.com/gmail/api/auth/scopes)

---

## 🧪 Local Dev + CI Rules

- Use `vite` for local testing / frontend preview
- Use `wrangler dev` for Workers testing
- Use GitHub Actions for:
  - Worker deploys
  - Sidebar packaging (optional Apps Script CI)

### Docs:
- 🚀 [Wrangler v3 Docs](https://developers.cloudflare.com/workers/wrangler/)
- ⚙️ [GitHub Actions + Wrangler](https://developers.cloudflare.com/workers/wrangler/commands/#publish)

---

## ✅ Commit & Naming Rules

- Feature branches: `feature/label-classifier`, `feature/voice-profile`
- PR titles: `feat: Add Whisper-mode preview`, `fix: token refresh bug`
- Use conventional commits

---

## 🧠 Additional References

- [Cloudflare Blog: Intro to Vectorize](https://blog.cloudflare.com/introducing-vectorize/)
- [OpenAI Embedding API](https://platform.openai.com/docs/guides/embeddings)
- [Apps Script Add-On Deployment](https://developers.google.com/workspace/marketplace/create-publish)

---